<adonisControls:AdonisWindow x:Class="Vividl.View.FetchWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vividl="clr-namespace:Vividl"
        xmlns:h="clr-namespace:Vividl.Helpers"
        xmlns:model="clr-namespace:Vividl.Model"
        xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
        xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
        xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        lex:LocalizeDictionary.DesignCulture="en"
        lex:ResxLocalizationProvider.DefaultAssembly="Vividl"
        lex:ResxLocalizationProvider.DefaultDictionary="Resources"
        Title="{Binding Source={lex:Loc MainWindow_MenuAdd}, Converter={StaticResource resConv}}" Width="350" SizeToContent="Height"
        WindowStartupLocation="CenterOwner" ShowInTaskbar="False" ResizeMode="NoResize">
    <Window.Style>
        <Style TargetType="Window" BasedOn="{StaticResource {x:Type Window}}"/>
    </Window.Style>
    <DockPanel>
        <DockPanel Margin="4" DockPanel.Dock="Bottom" LastChildFill="False">
            <Button Padding="4,2" Command="{Binding SettingsCommand}" TabIndex="2">
                <StackPanel Orientation="Horizontal">
                    <icon:PackIconModern Kind="Cog" Margin="0,0,4,0" VerticalAlignment="Center"/>
                    <TextBlock Text="{lex:Loc FetchWindow_Settings}" Margin="4,2"/>
                </StackPanel>
            </Button>
            <Button Content="{lex:Loc Cancel}" TabIndex="4"
                    DockPanel.Dock="Right" MinWidth="80"
                    IsCancel="True"/>
            <Button Content="{lex:Loc Submit}"
                    DockPanel.Dock="Right" MinWidth="80" TabIndex="3"
                    Click="Submit_Click" IsDefault="True"/>
        </DockPanel>
        <StackPanel>
            <TextBlock Text="{lex:Loc FetchWindow_EnterUrls}"
                       Margin="8"/>
            <Grid>
                <TextBox x:Name="txtUrl" AcceptsReturn="True" Height="90" TabIndex="0"
                         Text="{Binding VideoUrls, Converter={StaticResource arrayToString}}"
                         VerticalScrollBarVisibility="Auto"
                         adonisExtensions:CursorSpotlightExtension.RelativeSpotlightSize="0"/>
            </Grid>
            <Expander Header="{lex:Loc FetchWindow_Options}" Margin="0,2" TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                <TabControl Margin="0,2,0,0" Height="170">
                    <TabControl.Resources>
                        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                            <Setter Property="Margin" Value="4,6"/>
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Margin" Value="4,4,10,4"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Setter Property="Margin" Value="0,7,16,7"/>
                        </Style>
                        <Style TargetType="PasswordBox" BasedOn="{StaticResource {x:Type PasswordBox}}">
                            <Setter Property="Margin" Value="0,7,16,7"/>
                        </Style>
                    </TabControl.Resources>
                    <TabItem Header="{lex:Loc FetchWindow_TabGeneral}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{lex:Loc FetchWindow_DownloadFormat}"/>
                                <ComboBox ItemsSource="{Binding DownloadOptions, Mode=OneWay}"
                                          Margin="4" Padding="6,-3"
                                          SelectedIndex="{Binding SelectedDownloadOption}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <DockPanel>
                                                <icon:PackIconModern Kind="{Binding Converter={StaticResource iconConv}}"
                                                     DockPanel.Dock="Left" Margin="0,0,4,0" VerticalAlignment="Center"/>
                                                <ContentControl Content="{Binding}"/>
                                            </DockPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" IsEnabled="{x:Static vividl:App.UsingYtDlp}">
                                <TextBlock Text="{lex:Loc SettingsWindow_DefaultResolution}"/>
                                <ComboBox Margin="4" Padding="6,-3"
                                          ItemsSource="{h:Enum {x:Type model:Resolution}}"
                                          DisplayMemberPath="Description" SelectedValuePath="Value"
                                          SelectedValue="{Binding PreferredResolution}" />
                            </StackPanel>
                            <CheckBox Content="{lex:Loc FetchWindow_DownloadPlaylist}"
                                      IsChecked="{Binding OverrideOptions.YesPlaylist}"/>
                            <CheckBox Content="{lex:Loc FetchWindow_ImmediateDownload}"
                                      IsChecked="{Binding ImmediateDownload}"/>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="{lex:Loc FetchWindow_TabAuthentication}">
                        <Grid Margin="0,2">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{lex:Loc FetchWindow_Username}"/>
                            <TextBox Grid.Column="1" Text="{Binding OverrideOptions.Username}"/>
                            <TextBlock Grid.Row="1" Text="{lex:Loc FetchWindow_Password}"/>
                            <PasswordBox Grid.Row="1" Grid.Column="1" x:Name="txtPassword"/>
                            <TextBlock Grid.Row="2" Text="{lex:Loc FetchWindow_VideoPassword}"/>
                            <PasswordBox Grid.Row="2" Grid.Column="1" x:Name="txtVideoPassword"/>
                        </Grid>
                    </TabItem>
                </TabControl>
            </Expander>
        </StackPanel>
    </DockPanel>
</adonisControls:AdonisWindow>
